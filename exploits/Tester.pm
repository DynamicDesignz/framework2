package Msf::Exploit::Tester;
use strict;
use base 'Msf::Exploit';

my $advanced = {
};

my $info = {
  'Name'  => 'Tester',
  'Version'  => '0.1',
  'Author'  => 'sp00n',
  'Arch'  => [ ],
  'OS'    => [ ],
  'Priv'  => 1,
  'UserOpts'  =>
    {
    },
  'Payload' =>
    {
      'Space'      => 500, # We need to set this in new, since its user configurable
    },
  'Description'  =>  '',
  'Refs'  =>
    [
    ],
  'Targets' =>
    [
    ],
};

sub new {
  my $class = shift;
  my $self = $class->SUPER::new({'Info' => $info, 'Advanced' => $advanced}, @_);
  return($self);
}

sub Exploit {
  my $self = shift;
  my $encodedPayload = $self->GetVar('EncodedPayload');

  $self->PrintLine('Writing out test-nops');
  open(OUTFILE, '>test-nops') or return;
  print OUTFILE $encodedPayload->Nops;
  close(OUTFILE);

  $self->PrintLine('Writing out test-raw');
  open(OUTFILE, '>test-raw') or return;
  print OUTFILE $encodedPayload->RawPayload;
  close(OUTFILE);

  $self->PrintLine('Writing out test-encoded');
  open(OUTFILE, '>test-encoded') or return;
  print OUTFILE $encodedPayload->EncodedPayload;
  close(OUTFILE);

  $self->PrintLine('Writing out test-payload');
  open(OUTFILE, '>test-payload') or return;
  print OUTFILE $encodedPayload->Payload;
  close(OUTFILE);
}

1;
